# Test complet de la stack Wakaa (PostgreSQL + PostgREST + Next.js)

Write-Host "üß™ Test complet de la stack Wakaa..." -ForegroundColor Green
Write-Host ""

# Test 1: PostgreSQL
Write-Host "1Ô∏è‚É£ Test PostgreSQL..." -ForegroundColor Yellow
$env:PGPASSWORD = "Romuald12"
$pgTest = & "C:\Program Files\PostgreSQL\17\bin\psql.exe" -h localhost -U postgres -d wakaa -c "SELECT 'PostgreSQL OK' as status;" -t 2>&1

if ($LASTEXITCODE -eq 0) {
    Write-Host "   ‚úÖ PostgreSQL: Op√©rationnel" -ForegroundColor Green
} else {
    Write-Host "   ‚ùå PostgreSQL: Probl√®me d√©tect√©" -ForegroundColor Red
    Write-Host "   üí° D√©marrez PostgreSQL: Start-Service postgresql-x64-17" -ForegroundColor Yellow
    exit 1
}

# Test 2: PostgREST
Write-Host "2Ô∏è‚É£ Test PostgREST..." -ForegroundColor Yellow
try {
    $postgrestTest = Invoke-RestMethod -Uri "http://localhost:3001/" -Method GET -TimeoutSec 5
    Write-Host "   ‚úÖ PostgREST: Op√©rationnel" -ForegroundColor Green
} catch {
    Write-Host "   ‚ùå PostgREST: Non accessible" -ForegroundColor Red
    Write-Host "   üí° D√©marrez PostgREST: cd postgrest && .\start-postgrest.ps1" -ForegroundColor Yellow
    exit 1
}

# Test 3: API Tables
Write-Host "3Ô∏è‚É£ Test API Tables..." -ForegroundColor Yellow
$tables = @("profiles", "merchants", "customers", "products", "orders", "payments")
$apiOk = $true

foreach ($table in $tables) {
    try {
        $response = Invoke-RestMethod -Uri "http://localhost:3001/$table?limit=1" -Method GET -TimeoutSec 5
        Write-Host "   ‚úÖ Table $table : Accessible" -ForegroundColor Green
    } catch {
        Write-Host "   ‚ùå Table $table : Probl√®me" -ForegroundColor Red
        $apiOk = $false
    }
}

if (!$apiOk) {
    Write-Host "   üí° V√©rifiez la structure de la base de donn√©es" -ForegroundColor Yellow
    exit 1
}

# Test 4: Variables d'environnement
Write-Host "4Ô∏è‚É£ Test Variables d'environnement..." -ForegroundColor Yellow
if (Test-Path ".env.local") {
    $envContent = Get-Content ".env.local" -Raw
    $requiredVars = @("DATABASE_URL", "POSTGREST_URL", "NEXT_PUBLIC_APP_URL")
    $envOk = $true
    
    foreach ($var in $requiredVars) {
        if ($envContent -match $var) {
            Write-Host "   ‚úÖ $var : Configur√©" -ForegroundColor Green
        } else {
            Write-Host "   ‚ùå $var : Manquant" -ForegroundColor Red
            $envOk = $false
        }
    }
    
    if (!$envOk) {
        Write-Host "   üí° V√©rifiez le fichier .env.local" -ForegroundColor Yellow
        exit 1
    }
} else {
    Write-Host "   ‚ùå Fichier .env.local manquant" -ForegroundColor Red
    exit 1
}

# Test 5: D√©pendances Node.js
Write-Host "5Ô∏è‚É£ Test D√©pendances Node.js..." -ForegroundColor Yellow
if (Test-Path "node_modules") {
    Write-Host "   ‚úÖ node_modules : Pr√©sent" -ForegroundColor Green
} else {
    Write-Host "   ‚ùå node_modules : Manquant" -ForegroundColor Red
    Write-Host "   üí° Installez les d√©pendances: npm install --legacy-peer-deps" -ForegroundColor Yellow
    exit 1
}

# Test 6: Donn√©es de test
Write-Host "6Ô∏è‚É£ Test Donn√©es de test..." -ForegroundColor Yellow
try {
    $merchantsCount = Invoke-RestMethod -Uri "http://localhost:3001/merchants?select=count" -Method GET -TimeoutSec 5
    $productsCount = Invoke-RestMethod -Uri "http://localhost:3001/products?select=count" -Method GET -TimeoutSec 5
    
    Write-Host "   ‚úÖ Marchands: Donn√©es disponibles" -ForegroundColor Green
    Write-Host "   ‚úÖ Produits: Donn√©es disponibles" -ForegroundColor Green
} catch {
    Write-Host "   ‚ö†Ô∏è  Donn√©es de test: Limit√©es" -ForegroundColor Yellow
    Write-Host "   üí° Vous pouvez ajouter plus de donn√©es si n√©cessaire" -ForegroundColor Cyan
}

# R√©sum√© final
Write-Host ""
Write-Host "üéâ Tests termin√©s avec succ√®s!" -ForegroundColor Green
Write-Host ""
Write-Host "üìä √âtat de la stack:" -ForegroundColor Cyan
Write-Host "   ‚úÖ PostgreSQL (localhost:5432)" -ForegroundColor Green
Write-Host "   ‚úÖ PostgREST API (localhost:3001)" -ForegroundColor Green
Write-Host "   ‚úÖ Variables d'environnement" -ForegroundColor Green
Write-Host "   ‚úÖ D√©pendances Node.js" -ForegroundColor Green
Write-Host ""
Write-Host "üöÄ Pr√™t √† lancer l'application!" -ForegroundColor Green
Write-Host ""
Write-Host "üìã Commandes pour d√©marrer:" -ForegroundColor Cyan
Write-Host "   1. PostgREST (dans un terminal):" -ForegroundColor White
Write-Host "      cd postgrest && .\start-postgrest.ps1" -ForegroundColor Yellow
Write-Host ""
Write-Host "   2. Application Next.js (dans un autre terminal):" -ForegroundColor White
Write-Host "      npm run dev" -ForegroundColor Yellow
Write-Host ""
Write-Host "üîó URLs de l'application:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Application: http://localhost:3000" -ForegroundColor White
Write-Host "   ‚Ä¢ API PostgREST: http://localhost:3001" -ForegroundColor White
Write-Host "   ‚Ä¢ Documentation API: http://localhost:3001/" -ForegroundColor White